plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'dev.flutter.flutter-gradle-plugin'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.empoderaadmin"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion "27.0.12077973"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.empodera.application"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
        }
    }
}

// Configuração para múltiplos bancos Firebase
task copySecondaryGoogleServices(type: Copy) {
    from "src/secondary/google-services-secondary.json"
    into "."
    rename { String fileName ->
        fileName.replace("google-services-secondary.json", "google-services.json")
    }
}

// Configuração explícita de dependências
tasks.whenTaskAdded { task ->
    if (task.name == 'processDebugGoogleServices' ||
            task.name == 'mergeDebugAssets' ||
            task.name == 'mergeDebugShaders' ||
            task.name == 'compileFlutterBuildDebug') {
        task.mustRunAfter copySecondaryGoogleServices
    }
}

// Garante que a cópia seja feita antes do build
tasks.named('preBuild').configure {
    dependsOn copySecondaryGoogleServices
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation platform('com.google.firebase:firebase-bom:32.7.4')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-database'
}

apply plugin: 'com.google.gms.google-services'